---
id: dhsi2018
title: "Composition not Inheritance: Imagining a Functional Digital Humanities"
front_page: true
conference: "DHSI Colloquium"
conference_url: "http://dhsi.org/schedule.php"
conference_location: "Victoria, BC"
emphasize: false
date: 14/6/2018
short_description: |+
  Call to think through digital humanities practices using methods derived from functional programming.
description: |+
  Taking a piece of advice from the 1994 software engineering classic, *Design Patterns* by Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides, this talk imagines a digital humanities that favors composition over inheritance in the design of its systems. In object-oriented programming, inheritance is the design pattern in which objects that share functionality inherit their shared functionality from a common ancestor (e.g. guppies and goldfish both inherit the "swim with fins" behavior from a common fish ancestor class). Such a design pattern gives us big, rigid, and complex hierarchies of data and structure a lot of thinking about digital objects in text encoding and metadata-heavy projects. One source of anxiety in regards to future-proofing digital data can be traced to why *Design Patterns* recommends avoiding inheritance: if the needs of users change, the entire pattern of inheritance can be disrupted (in the fish example, how do you get the "swims with fins" behavior to a whale or a shark, both of which are not fish?). Instead, composition is the preferred pattern for designing complex systems. Rather than define what data is, in composition, object features are determined by what they do. This model of data focuses on function and behavior rather than ontology. It is more extensible and nuanced because arbitrary functions can be concatenated to describe novel behaviors (in the fish example, there would be a "swims with fins" class that could be composed into goldfish, shark, and whale regardless of what each type *was*). In this paper, I connect this idea of functional composition to Jacques Derrida's "Signature, Event, Context," which I argue is the only essay from the post-structual period that has anything interesting to say about computation. There, Derrida suggests that the primary importance of writing is revealing language's iterability, the way it always repeats but always repeats in new contexts. Using these two concepts---functional composition and linguistic iteration---, I conclude by arguing that while many DH archiving projects and the infrastructure that supports them (such as TEI and Islandora) have done a very good job of getting digital versions of a variety of humanistic objects onto the Internet, but the ability to chain, play with, remix, manipulate, and cross-pollinate from different data-stores and through different media, which is after all the true promise of the digital, is lacking. By thinking about our projects less as future-proof ontological hierarchies and more as compositions of functional behaviors, I speculate that we may start to imagine a version of digital humanities practice that is more in tune with the affordances of the digital itself.

