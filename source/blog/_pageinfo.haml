%meta{ :charset => "utf-8" }/
%title
	- page_title = config[:blog_title]
	- if current_page
		- if current_page.data.has_key? "title"
			- page_title = current_page.data["title"]
		- else
			
			- if !/index.html/.match(current_page.source_file)
				- page_title += " - "
			- if current_page.respond_to? :title
				- page_title +=  "#{current_page.title}"
			-elsif current_page.data.has_key? "title"
				- page_title +=  "#{current_page.data["title"]}"
			- elsif current_page.source_file =~ /#{blog.options[:tag_template]}/
				- page_title +=  "Articles Tagged \"#{tagname}\""
			- elsif current_page.source_file =~ /#{blog.options[:calendar_template]}/
				- page_title += "Archive for"
				- case page_type
					- when 'day'
						- page_title +=  Date.new(year, month, day).strftime('%b %e %Y')
					- when 'month'
						- page_title +=  Date.new(year, month, 1).strftime('%b %Y')
					- when 'year'
						- page_title +=  year.to_s
	- #page_title.gsub!(/[_*]/,"")
	= page_title.gsub(/[_*]/,"")
- page_description = nil
-if current_page.data.has_key? "description"
	- page_description = Haml::Filters::Markdown.render(current_page.data["description"])
-elsif current_page.respond_to? :summary
	- page_description = current_page.summary
-if not page_description.nil?
	- page_description = Nokogiri::HTML(page_description).text.gsub(/\'/,"\\'")
	%meta{ :name => "description", :content => "#{page_description}" }
- page_image = image_path('me.png')
- if current_page.respond_to? :body
	- nokogiri_img = Nokogiri::HTML(current_page.body).css('img.splash')
	- if nokogiri_img.length > 0
		- page_image = image_path(nokogiri_img.first.attribute "src")
/ Open Graph Stuff
%meta{ :name => "og:url", :content => "#{config[:site_deploy_root]}#{current_page.url}" }
-if page_description.nil?
	- page_description = "Andrew Pilsch's Blog"
%meta{ :name => "og:description", :content=> page_description }
%meta{ :name => "og:title", :content => page_title.gsub(/[_*]/,"") }
%meta{ :name => "og:image", :content => "#{config[:site_deploy_root]}" + page_image }

/ Twitter Card Stuff
%meta{ :name => "twitter:card", :content => "summary_large_image" }
%meta{ :name => "twitter:creator", :content => "@oncomouse" }
%meta{ :name => "twitter:description", :content=> page_description }
%meta{ :name => "twitter:title", :content => page_title.gsub(/[_*]/,"") }
%meta{ :name => "twitter:image:src", :content => "#{config[:site_deploy_root]}" + page_image }

%meta{ :name => "viewport", :content => "width=device-width, initial-scale=1.0" }/
%link{ :href => "/blog/feed.xml", :rel => "alternate", :type =>"application/atom+xml" }/
/ Load Fonts
= stylesheet_link_tag("http://fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic", :media => "all and (min-width: 33.236em)", :rel => "stylesheet" )
= stylesheet_link_tag("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css", :media => "all", :rel => "stylesheet" )
- if build?
	= stylesheet_link_tag("blog/application.css", :media => "all", :rel => "stylesheet" )
	-# Inline stylesheet. Massively increases blog size:
	-#:scss
	-#	#{Tilt['erb'].new { IO.read('source/stylesheets/blog/pygments.css.erb') }.render}
	-#:scss
	-#	#{IO.read('source/stylesheets/blog/global.css.scss').gsub('bear_defaults','blog/bear_defaults')}
	-#:scss
	-#	@import 'susy';
	-#	@media (min-width: 33.236em) {
	-#		#{IO.read('source/stylesheets/blog/layout.css.scss').gsub('settings/', "blog/settings/").gsub('bear_defaults','blog/bear_defaults')}
	-#	}
-else
	/ Pygments Support
	= stylesheet_link_tag("blog/pygments.css", :media => "all", :rel => "stylesheet" )
	/ Three Bears Structure
	= stylesheet_link_tag("blog/global.css", :media => "all", :rel => "stylesheet" )
	= stylesheet_link_tag("blog/layout.css", :media => "all and (min-width: 33.236em)", :rel => "stylesheet" )